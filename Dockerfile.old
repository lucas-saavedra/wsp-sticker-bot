# Etapa 1: builder
FROM python:3.12-slim AS builder

# Crear entorno virtual e instalar yt-dlp
RUN python3 -m venv /opt/yt-dlp-venv && \
    /opt/yt-dlp-venv/bin/pip install --no-cache-dir --upgrade pip yt-dlp

# Etapa 2: imagen final
FROM node:22-slim

# Variables para Puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser \
    PATH="/opt/yt-dlp-venv/bin:$PATH"

# Instalar dependencias necesarias del sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    chromium \
    python3 \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcups2 \
    libdbus-1-3 \
    libgdk-pixbuf2.0-0 \
    libnspr4 \
    libnss3 \
    libx11-xcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm-dev \
    libxshmfence1 \
    xdg-utils \
    fonts-liberation \
    libappindicator3-1 \
    curl \
    wget \
    --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# Enlace simbólico requerido por Puppeteer
RUN ln -s /usr/bin/chromium /usr/bin/chromium-browser || true

# Copiar yt-dlp desde la etapa builder
COPY --from=builder /opt/yt-dlp-venv /opt/yt-dlp-venv

# Establecer carpeta de trabajo
WORKDIR /app

# Copiar solo los archivos necesarios para cache de dependencias
COPY package*.json ./

# Instalar dependencias Node.js
RUN npm install

# Copiar el resto del código
COPY . .

# Exponer puerto (ajústalo si usas otro)
EXPOSE 8080

# Comando por defecto
CMD ["npm", "start"]
